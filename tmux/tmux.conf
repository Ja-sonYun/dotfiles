set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'kristijanhusak/tmux-simple-git-status'
set -g @plugin 'xamut/tmux-network-bandwidth'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-online-status'

# set-environment __CURRENT_SHELL zsh

set-option -sg escape-time 30

# set -g terminal-overrides ",alacritty:RGB"
# set -ga terminal-overrides ",*256col*:Tc"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

set -g history-limit 50000

# panes
set -g pane-border-style 'bg=colour0 fg=colour240'
set -g pane-active-border-style 'bg=colour0 fg=colour255'
set -g pane-border-lines simple

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# 
# 
# 
# 
# 
set -g @cpu_low_icon "░░" # icon when cpu is low
set -g @cpu_medium_icon "▒▒" # icon when cpu is medium
set -g @cpu_high_icon "▓▓" # icon when cpu is high
set -g @ram_low_icon "░░" # icon when ram is low
set -g @ram_medium_icon "▒▒" # icon when ram is medium
set -g @ram_high_icon "▓▓" # icon when ram is high
set -g @online_icon " "
set -g @offline_icon ""

set-option -g status on
set-option -g status-interval 1
set-option -g status-style bg=default
set-option -g status-left-length 50
set-option -g status-left-style default
# set-option -g status-left '#[fg=colour244]#{?client_prefix,#[fg=colour1 bold],}   #[fg=colour14]#($MYDOTFILES/scripts/check_popup_running #{__INTERVAL})#($MYDOTFILES/tmux/scripts/interval 6)'
set-option -g status-left '#[fg=colour244]#{?client_prefix,#[fg=colour1 bold],}   '
set-option -g status-right-length 150
set-option -g status-right-style 'bg=colour234 bold'
set-option -g status-right ' [#[fg=colour104]%a %d %b#[fg=default]] #[fg=default][#[fg=colour103]%H:%M#[fg=default]] [#($MYDOTFILES/bin/xkbswitch -ge)]#($MYDOTFILES/tmux/plugins/tmux-spotify/scripts/status.sh) #{online_status}'
# set-option -g status-right '#{cpu_fg_color}#{cpu_icon}#[fg=black]#{ram_fg_color}#{ram_icon}#[fg=cyan] #[fg=red]┇ #($MYDOTFILES/tmux/scripts/paneparseicon.sh "#{=150:pane_title}") #[fg=blue]┇ %a %d %b#[fg=green] #($MYDOTFILES/tmux/scripts/weather.sh)#[fg=yellow] ┇ %H:%M #[fg=white]┇ #($MYDOTFILES/tmux/plugins/tmux-spotify/scripts/status.sh)#{online_status}'
# [#[fg=colour104]#($MYDOTFILES/tmux/scripts/weather.sh)

setw -g window-status-current-style 'bg=colour250 fg=colour234 bold'
setw -g window-status-current-format ' #($MYDOTFILES/tmux/scripts/getshortenpwd.sh "#{pane_current_path}")/❲#[fg=default]#($MYDOTFILES/tmux/scripts/getprocessicon.sh "#W" cur)#[fg=default]❳#($MYDOTFILES/scripts/is_shell #W)'

setw -g window-status-style 'fg=colour255 bg=colour235'
# setw -g window-status-format ' #($MYDOTFILES/tmux/scripts/getshortenpwd.sh "#{pane_current_path}")/❲#($MYDOTFILES/tmux/scripts/getprocessicon.sh "#W" cur)#[fg=default]❳ #[fg=colour14]#($MYDOTFILES/scripts/check_something_running #D #{__INTERVAL} #W)'
setw -g window-status-format ' #($MYDOTFILES/tmux/scripts/getshortenpwd.sh "#{pane_current_path}")/❲#($MYDOTFILES/tmux/scripts/getprocessicon.sh "#W" cur)#[fg=default]❳#($MYDOTFILES/scripts/is_shell #W)'

setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'

set-option -g status-position top
set -g default-terminal "xterm-256color"
set -g terminal-overrides 'xterm:colors=256'
# set -s terminal-overrides ",xterm-256color-italic:Tc,xterm-256color-italic:Se"
set -s escape-time 0
set-option -g status-interval 1
set -g base-index 1
setw -g pane-base-index 1

bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

set -g prefix C-q
bind -n S-left select-pane -L
bind -n S-down select-pane -D
bind -n S-up select-pane -U
bind -n S-right select-pane -R
unbind-key -T prefix C-o
bind E setw synchronize-panes \; display "synchronize-panes #{?pane_synchronized,on,off}"

set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
set-window-option -g mode-keys vi
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
#macos
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

unbind-key -T prefix C-f
unbind-key -T prefix C-e
unbind-key -T prefix C-t

TMUX_FZF_LAUNCH_KEY="e"

# bind -r e popup '#{pane_current_path}' -E 'zsh
# bind C-e run-shell "tmuxpopup"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
is_popup="[[ `tmux display-message -p -F \"#{session_name}\"` == *\"popup\"* ]]"
bind-key f run-shell "$MYDOTFILES/scripts/popup-tmux"
bind-key C-f run-shell "$MYDOTFILES/scripts/hpopup-tmux"
# bind-key f if-shell -b "$is_popup" \
#     "detach-client" \
#     "run-shell \"$MYDOTFILES/scripts/popup-tmux 'tmux attach -t popup || tmux new -s popup && tmux set status off'\""
# bind-key C-f if-shell -b "$is_popup" \
#     "detach-client" \
#     "run-shell \"$MYDOTFILES/scripts/hpopup-tmux 'tmux attach -t popup || tmux new -s popup && tmux set status off'\""

# bind F popup -E -w80% zsh\; display-message " zsh closed"

bind-key h run-shell "$MYDOTFILES/scripts/hpopup-tmux btm"\; display-message " btm closed"
bind-key C-h run-shell "$MYDOTFILES/scripts/popup-tmux btm"\; display-message " btm closed"
bind-key t run-shell "$MYDOTFILES/scripts/popup-tmux tig"\; display-message " tig closed"
bind-key j run-shell "$MYDOTFILES/scripts/popup-tmux wtfutil"\; display-message " wtfutil closed"
# bind-key T run-shell "$MYDOTFILES/scripts/popup-tmux tig"\; display-message " tig closed"
# bind-key j run-shell "$MYDOTFILES/scripts/hpopup-tmux $MYDOTFILES/scripts/rfv"\; display-message " rfv closed"
# bind-key C-j run-shell "$MYDOTFILES/scripts/popup-tmux $MYDOTFILES/scripts/rfv"\; display-message " rfv closed"
bind-key v run-shell "$MYDOTFILES/scripts/hpopup-tmux $MYDOTFILES/scripts/proclist"\; display-message " ps closed"
bind-key C-v run-shell "$MYDOTFILES/scripts/popup-tmux $MYDOTFILES/scripts/proclist"\; display-message " ps closed"
bind-key o run-shell "$MYDOTFILES/scripts/hpopup-tmux $MYDOTFILES/scripts/things_create"\; display-message " adding todo closed"
bind-key C-o run-shell "$MYDOTFILES/scripts/popup-tmux $MYDOTFILES/scripts/things_create"\; display-message " adding todo closed"
# bind t popup -E -w80% tig\; display-message " gotop closed"

bind-key K set status

bind-key B display-message '#{cursor_x} #{cursor_y}'

# reload config
bind R source-file ~/.tmux.conf \; display-message "Tmux configuration reloaded."

# run '$MYDOTFILES/tmux/plugins/tpm/tpm'
